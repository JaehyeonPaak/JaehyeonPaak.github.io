{"version":3,"file":"component---src-templates-tags-page-js-b662131a6e77835d85ba.js","mappings":"yIAGIA,EAAyB,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,OAChDG,EAAc,EAAQ,MACXF,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,sOACD,S,yDCkBJ,IA1Ba,IAAuD,IAAtD,MAAEC,EAAK,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,EAAI,UAAEC,EAAS,KAAEC,GAAM,EAC5D,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MAIrB,OACE,2BACE,uBAAKC,UAAS,mBAAoBF,GAAY,SAC5C,gBAAC,EAAAG,KAAI,CAACC,GAAI,IAAMR,GACd,uBAAKM,UAAU,aACb,sBAAIA,UAAU,aACXH,EAAKM,KAAIC,GACR,sBAAIC,IAAKD,GAAK,uBAAKJ,UAAU,cAAyBI,EATvDE,cAAcC,QAAQ,aAAcC,GAAgBA,EAAYC,oBAWjE,uBAAKC,IAAKd,EAAWe,MAAO,CAAEC,aAAc,MAAOC,MAAO,OAAQC,OAAQ,WAE5E,uBAAKd,UAAU,cAAa,0BAAKR,IACjC,uBAAKQ,UAAU,aAAaP,GAC5B,uBAAKO,UAAU,aAAaL,MAI9B,C,2ICnBV,MAsEMoB,EAAa,aAwBNC,EAAO,IAAM,gBAAC,IAAG,CAACxB,MAAM,UAErC,UAhGiB,IAAsB,IAArB,YAAEyB,GAAa,EAC7B,MAAM,KAAEpB,EAAI,cAAEqB,GAAkBD,GAC1B,EAACE,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,EAACC,EAAa,EAACC,IAAmBF,EAAAA,EAAAA,UAAS,IASjD,OACI,gBAAC,IAAM,CAACG,UAAU,aAAaC,SAAS,SACpC,uBAAKd,MAAO,CAAEe,QAAS,OAAQC,gBAAiB,6BAA8Bf,aAAc,OAAQgB,aAAc,SAC9G,uBAAK5B,UAAU,QACX,yBAAOA,UAAU,SACb,yBAAOA,UAAU,eAAe6B,KAAK,OAAOC,YAAY,GAAGC,SAAUC,GAAKZ,EAAcY,EAAEC,OAAOC,OAAQA,MAAOf,IAChH,wBAAMnB,UAAU,gBAAe,oBAEnC,gBAAC,IAAU,CAACW,MAAO,CAAEwB,SAAU,WAAYC,IAAK,MAAOC,MAAO,MAAOC,UAAW,uBAEpF,0BAAI,mBACJ,sBAAI3B,MAAO,CAAE4B,QAAS,OAAQC,SAAU,OAAQC,UAAW,OAAQf,QAAS,IACvE7B,EAAKM,KAAIC,IACN,MAAMsC,EAAetC,EAAIG,QAAQ,SAASoC,GAAKA,EAAElC,gBACjD,OACI,sBAAIJ,IAAKD,EAAKO,MAAO,CAAEiC,YAAa,MAAOhB,aAAc,QACrD,uBAAK5B,UAAS,iBAAkBsB,EAAauB,SAASzC,GAAO,SAAW,IAAM0C,QAAS,IAvB3F1C,KAChBkB,EAAauB,SAASzC,GACtBmB,EAAgBD,EAAayB,QAAOC,GAAeA,IAAgB5C,KAEnEmB,EAAgB,GAAD,eAAKD,GAAY,CAAElB,IACtC,EAkBqH6C,CAAe7C,IACxG,4BAAOsC,GACP,4BAAOxB,EAAcd,KAExB,MAKrB,uBAAKJ,UAAU,cAAcW,MAAO,CAAEG,OAAQ,MAAOc,aAAc,UACnE,gBAAC,EAAAsB,YAAW,CAACC,MAAOpC,EAAeqC,OAAQC,IACvC,MAAMC,EAAgBD,EAAKE,kBAAkBC,MAAMT,QAAO,QAAC,KAAEU,GAAM,SAC/DA,EAAKC,YAAYlE,MAAMc,cAAcuC,SAAS1B,EAAWb,iBAChC,IAAxBgB,EAAaqC,QAAgBF,EAAKC,YAAY7D,KAAK+D,MAAKxD,GAAOkB,EAAauB,SAASzC,KAAM,IAE1FyD,EAAgBP,EAAcK,OACpC,OACI,2BACI,uBAAKhD,MAAO,CAAEmD,OAAQ,SAAUC,YAAa,SACtB,IAAlBF,EACG,0BAAI,wCAAsC1C,EAAW,KACrD,sBAAIR,MAAO,CAAEqD,MAAO,uBAAwB,aAAU,qBAAGrD,MAAO,CAAEqD,MAAO,UAAYH,GAAkB,iBAG9GP,EAAcnD,KAAI,CAAC,EAAU8D,KAAW,IAArB,KAAER,GAAM,EACxB,OAAQ,gBAAC,IAAI,CACTpD,IAAKoD,EAAKS,GACV1E,MAAOiE,EAAKC,YAAYlE,MACxBC,SAAUgE,EAAKC,YAAYjE,SAC3BC,KAAM+D,EAAKU,OAAOzE,KAClBC,KAAM8D,EAAKC,YAAY/D,KACvBC,UAAW6D,EAAKC,YAAY9D,UAC5BC,KAAM4D,EAAKC,YAAY7D,MACzB,IAEJ,IAGT,C","sources":["webpack://gatsby-starter-default/./node_modules/@mui/icons-material/Search.js","webpack://gatsby-starter-default/./src/components/post.jsx","webpack://gatsby-starter-default/./src/templates/tags-page.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import React from 'react';\nimport { useDarkMode } from '../context/theme-context';\nimport { Link } from 'gatsby';\n\nconst Post = ({ title, subtitle, slug, date, logoImage, tags }) => {\n  const { darkMode } = useDarkMode();\n  const capitalize = (str) => {\n    return str.toLowerCase().replace(/(^|\\s)\\S/g, (firstLetter) => firstLetter.toUpperCase());\n  };\n  return (\n    <div>\n      <div className={`post-container ${darkMode && 'dark'}`}>\n        <Link to={'/' + slug}>\n          <div className='post-body'>\n            <ul className='post-tags'>\n              {tags.map(tag => (\n                <li key={tag}><div className='post-badge'>{capitalize(tag)}</div></li>\n              ))}\n              <img src={logoImage} style={{ borderRadius: '50%', width: '25px', height: '25px'}}></img>\n            </ul>\n            <div className='post-title'><h3>{title}</h3></div>\n            <div className='post-text'>{subtitle}</div>\n            <div className='post-date'>{date}</div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Post from '../components/post';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst TagsPage = ({ pageContext }) => {\n    const { tags, tagPostCounts } = pageContext;\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedTags, setSelectedTags] = useState([]);\n\n    const handleTagClick = (tag) => {\n        if (selectedTags.includes(tag)) {\n            setSelectedTags(selectedTags.filter(selectedTag => selectedTag !== tag));\n        } else {\n            setSelectedTags([...selectedTags, tag]);\n        }\n    };\n    return (\n        <Layout pageTitle=\"All Topics\" pageType='posts'>\n            <div style={{ padding: '20px', backgroundColor: 'rgba(133, 133, 133, 0.301)', borderRadius: '10px', marginBottom: '40px' }}>\n                <div className='card'>\n                    <label className='input'>\n                        <input className='input__field' type='text' placeholder='' onChange={e => setSearchTerm(e.target.value)} value={searchTerm}></input>\n                        <span className='input__label'>Search By Title</span>\n                    </label>\n                    <SearchIcon style={{ position: 'absolute', top: '50%', right: '8px', transform: 'translateY(-50%)' }}></SearchIcon>\n                </div>\n                <h3>Filter with tag</h3>\n                <ul style={{ display: 'flex', flexWrap: 'wrap', listStyle: 'none', padding: 0 }}>\n                    {tags.map(tag => {\n                        const formattedTag = tag.replace(/\\b\\w/g, c => c.toUpperCase());\n                        return (\n                            <li key={tag} style={{ marginRight: '5px', marginBottom: '7px' }}>\n                                <div className={`post-hashtag ${selectedTags.includes(tag) ? 'active' : ''}`} onClick={() => handleTagClick(tag)}>\n                                    <span>{formattedTag}</span>\n                                    <span>{tagPostCounts[tag]}</span>\n                                </div>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n            <div className='post-border' style={{ height: '1px', marginBottom: '20px' }}></div>\n            <StaticQuery query={tagsPageQuery} render={data => {\n                const filteredPosts = data.allMarkdownRemark.edges.filter(({ node }) =>\n                    node.frontmatter.title.toLowerCase().includes(searchTerm.toLowerCase()) &&\n                    (selectedTags.length === 0 || node.frontmatter.tags.some(tag => selectedTags.includes(tag)))\n                );\n                const numberOfPosts = filteredPosts.length;\n                return (\n                    <div>\n                        <div style={{ margin: '30px 0', paddingLeft: '25px' }}>\n                            {numberOfPosts === 0 ?\n                                <h5>There is no corresponding post with '{searchTerm}'</h5> :\n                                <h5 style={{ color: 'rgb(170, 170, 170)' }}>There are <b style={{ color: 'white' }}>{numberOfPosts}</b> total posts</h5>\n                            }\n                        </div>\n                        {filteredPosts.map(({ node }, index) => {\n                            return (<Post\n                                key={node.id}\n                                title={node.frontmatter.title}\n                                subtitle={node.frontmatter.subtitle}\n                                slug={node.fields.slug}\n                                date={node.frontmatter.date}\n                                logoImage={node.frontmatter.logoImage}\n                                tags={node.frontmatter.tags}\n                            />);\n                        })}\n                    </div>\n                );\n            }} />\n        </Layout>\n    )\n}\n\nconst tagsPageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            subtitle\n            date(formatString: \"MMM Do YYYY\")\n            tags\n            logoImage\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"Posts\" />; // Head 컴포넌트 추가\n\nexport default TagsPage;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","title","subtitle","slug","date","logoImage","tags","darkMode","useDarkMode","className","Link","to","map","tag","key","toLowerCase","replace","firstLetter","toUpperCase","src","style","borderRadius","width","height","tagsPageQuery","Head","pageContext","tagPostCounts","searchTerm","setSearchTerm","useState","selectedTags","setSelectedTags","pageTitle","pageType","padding","backgroundColor","marginBottom","type","placeholder","onChange","e","target","value","position","top","right","transform","display","flexWrap","listStyle","formattedTag","c","marginRight","includes","onClick","filter","selectedTag","handleTagClick","StaticQuery","query","render","data","filteredPosts","allMarkdownRemark","edges","node","frontmatter","length","some","numberOfPosts","margin","paddingLeft","color","index","id","fields"],"sourceRoot":""}