{"version":3,"file":"component---src-templates-tags-page-js-e436240351861ebddaca.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@mui/icons-material/Search.js","webpack://gatsby-starter-default/./src/components/post.jsx","webpack://gatsby-starter-default/./src/templates/tags-page.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import React from 'react';\nimport { useDarkMode } from '../context/theme-context';\nimport { Link } from 'gatsby';\n\nconst Post = (props) => {\n  const title = props.node.frontmatter.title;\n  const subtitle = props.node.frontmatter.subtitle;\n  const slug = props.node.fields.slug;\n  const date = props.node.frontmatter.date;\n  const logoImage = props.node.frontmatter.logoImage;\n  const tags = props.node.frontmatter.tags;\n\n  const { darkMode } = useDarkMode();\n  \n  const capitalize = (str) => {\n    return str.toLowerCase().replace(/(^|\\s)\\S/g, (firstLetter) => firstLetter.toUpperCase());\n  };\n\n  return (\n    <div>\n      <div className={`post-container ${darkMode && 'dark'}`}>\n        <Link to={'/' + slug}>\n          <div className='post-body'>\n            <ul className='post-tags'>\n              {tags.map(tag => (\n                <li key={tag}><div className='post-badge'>{capitalize(tag)}</div></li>\n              ))}\n              <img src={logoImage} alt='logo' style={{ borderRadius: '50%', width: '25px', height: '25px'}}></img>\n            </ul>\n            <div className='post-title'><h3>{title}</h3></div>\n            <div className='post-text'>{subtitle}</div>\n            <div className='post-date'>{date}</div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;","import React, { useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Post from \"../components/post\"\nimport SearchIcon from \"@mui/icons-material/Search\"\n\nconst TagsPage = ({ pageContext }) => {\n  const { tags, tagPostCounts } = pageContext\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [selectedTags, setSelectedTags] = useState([])\n\n  const handleTagClick = tag => {\n    if (selectedTags.includes(tag)) {\n      setSelectedTags(selectedTags.filter(selectedTag => selectedTag !== tag))\n    } else {\n      setSelectedTags([...selectedTags, tag])\n    }\n  }\n  return (\n    <Layout pageTitle=\"All Topics\" pageType=\"posts\">\n      <div\n        style={{\n          padding: \"20px\",\n          backgroundColor: \"rgba(133, 133, 133, 0.301)\",\n          borderRadius: \"10px\",\n          marginBottom: \"40px\",\n        }}\n      >\n        <div className=\"card\">\n          <label className=\"input\">\n            <input\n              className=\"input__field\"\n              type=\"text\"\n              placeholder=\"\"\n              onChange={e => setSearchTerm(e.target.value)}\n              value={searchTerm}\n            ></input>\n            <span className=\"input__label\">Search By Title</span>\n          </label>\n          <SearchIcon\n            style={{\n              position: \"absolute\",\n              top: \"50%\",\n              right: \"8px\",\n              transform: \"translateY(-50%)\",\n            }}\n          ></SearchIcon>\n        </div>\n        <h3>Filter with tag</h3>\n        <ul\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            listStyle: \"none\",\n            padding: 0,\n          }}\n        >\n          {tags.map(tag => {\n            const formattedTag = tag.replace(/\\b\\w/g, c => c.toUpperCase())\n            return (\n              <li key={tag} style={{ marginRight: \"5px\", marginBottom: \"7px\" }}>\n                <div\n                  className={`post-hashtag ${\n                    selectedTags.includes(tag) ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handleTagClick(tag)}\n                >\n                  <span>{formattedTag}</span>\n                  <span>{tagPostCounts[tag]}</span>\n                </div>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n      <div\n        className=\"post-border\"\n        style={{ height: \"1px\", marginBottom: \"20px\" }}\n      ></div>\n      <StaticQuery\n        query={tagsPageQuery}\n        render={data => {\n          const filteredPosts = data.allMarkdownRemark.edges.filter(\n            ({ node }) =>\n              node.frontmatter.title\n                .toLowerCase()\n                .includes(searchTerm.toLowerCase()) &&\n              (selectedTags.length === 0 ||\n                node.frontmatter.tags.some(tag => selectedTags.includes(tag)))\n          )\n          const numberOfPosts = filteredPosts.length\n          return (\n            <div>\n              <div style={{ margin: \"30px 0\", paddingLeft: \"25px\" }}>\n                {numberOfPosts === 0 ? (\n                  <h5>There is no corresponding post with '{searchTerm}'</h5>\n                ) : (\n                  <h5 style={{ color: \"rgb(170, 170, 170)\" }}>\n                    There are <b style={{ color: \"white\" }}>{numberOfPosts}</b>{\" \"}\n                    total posts\n                  </h5>\n                )}\n              </div>\n              {filteredPosts.map(({ node }, index) => {\n                return <Post key={node.id} node={node} />\n              })}\n            </div>\n          )\n        }}\n      />\n    </Layout>\n  )\n}\n\nconst tagsPageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            subtitle\n            date(formatString: \"MMM Do YYYY\")\n            tags\n            logoImage\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo title=\"Posts\" /> // Head 컴포넌트 추가\n\nexport default TagsPage\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","props","title","node","frontmatter","subtitle","slug","fields","date","logoImage","tags","darkMode","useDarkMode","className","Link","to","map","tag","key","toLowerCase","replace","firstLetter","toUpperCase","src","alt","style","borderRadius","width","height","tagsPageQuery","Head","pageContext","tagPostCounts","searchTerm","setSearchTerm","useState","selectedTags","setSelectedTags","pageTitle","pageType","padding","backgroundColor","marginBottom","type","placeholder","onChange","e","target","value","position","top","right","transform","display","flexWrap","listStyle","formattedTag","c","marginRight","includes","onClick","filter","selectedTag","handleTagClick","StaticQuery","query","render","data","filteredPosts","allMarkdownRemark","edges","length","some","numberOfPosts","margin","paddingLeft","color","index","id"],"sourceRoot":""}